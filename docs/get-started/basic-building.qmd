---
title: Building and debugging docs
jupyter:
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

**tl;dr**: Once you've configured quartodoc in your `_quarto.yml` file, use the following commands to build and preview a documentation site.

## `quartodoc build`: Create doc files

Automatically generate `.qmd` files with reference api documentation.  This is written by default to the reference/ folder in your quarto project.

```bash
quartodoc build
```

If you are iterating on your docstrings while previewing your site with `quarto preview`, you will likely want to rebuild the doc pages automatically when docstrings change.  The `--watch` flag does exactly this.

```bash
quartodoc build --watch
```

For more information on the `quartodoc build` command, use `--help` in the terminal like so:

```bash
quartodoc build --help
```

```{python}
#|echo: false
!quartodoc build --help
```


## `quartodoc interlinks`: Create inventory files

Inventory files facilitate linking to API doc pages within and across `quartodoc` sites.  This is optional.
  
```bash
quartodoc interlinks
```

## `quarto preview`: Preview the site

Use `quarto` to preview the site:

```bash
quarto preview
```

## Speeding up preview

### Rewriting doc files

By default, the `quartodoc build` only re-writes doc pages when it detects
a change to their content. This helps prevent `quarto preview` from trying
to re-render every doc page--including those that haven't changed.

###  Selectively building doc pages

Use the filter option with `quartodoc build` to generate a subset of doc pages.
This is useful when you have a many (e.g. several hundred) doc pages, and want
to test a change on a single page.

```bash
quartodoc build --filter 'get_object'
```

This option also accepts a wildcard pattern, which causes it to build docs for all matching objects.

```bash
# write the docs for the MdRenderer class, and any of its methods
# (e.g. MdRenderer.renderer)
quartodoc build --filter 'MdRenderer*'
```

:::{.callout-note}
When using a name with a wildcard, be sure to put it in single quotes!
Otherwise, your shell may try to "expand it" to match file names.
:::