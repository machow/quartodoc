project:
  type: website
  output-dir: _build
  resources:
    - examples/single-page
    - examples/pkgdown
    - examples/auto-package
    - objects.txt
    - objects-test.txt

metadata-files:
  - api/_sidebar.yml

filters:
  - "interlinks"

interlinks:
  fast: true
  sources:
    python:
      url: https://docs.python.org/3/
    griffe:
      url: https://mkdocstrings.github.io/griffe/
    qd2:
      url: https://machow.github.io/quartodoc/
      inv: objects-test.txt


website:
  title: "quartodoc"
  page-navigation: true
  navbar:
    left:
      - file: get-started/overview.qmd
        text: Get Started
      - file: examples/
        text: Examples
      - file: tutorials/
        text: Tutorials
      - href: api/
        text: Reference

    right:
      - icon: github
        href: https://github.com/machow/quartodoc/
  sidebar:
    - id: get-started
      title: Get Started
      style: floating
      align: left
      contents:
        - get-started/overview.qmd
        - section: "Basic Use"
          contents:
            - get-started/basic-docs.qmd
            - get-started/basic-content.qmd
            - get-started/basic-building.qmd
            - get-started/crossrefs.qmd
            - get-started/interlinks.qmd
            - get-started/sidebar.qmd
            - get-started/extending.qmd

        - section: "Docstrings"
          contents:
            - get-started/docstring-style.qmd
            - get-started/docstring-examples.qmd

        - section: "Programming"
          contents:
            - get-started/dev-big-picture.qmd
            - get-started/dev-prepare.qmd
            - get-started/dev-docstrings.qmd
            - get-started/dev-renderers.qmd
        - section: "Extra Topics"
          contents:
            - get-started/extra-build-sequence.qmd


format:
  html:
    theme: cosmo
    css:
      - api/_styles-quartodoc.css
      - styles.css
    toc: true


quartodoc:
  style: pkgdown
  dir: api
  package: quartodoc
  render_interlinks: true
  repo_url: https://github.com/machow/quartodoc
  renderer:
    style: markdown
    table_style: description-list
    show_source_link: true
  sidebar: "api/_sidebar.yml"
  css: "api/_styles-quartodoc.css"
  sections:
    - title: Preparation Functions
      desc: |
        These functions fetch and analyze Python objects, including parsing docstrings.
        They prepare a basic representation of your doc site that can be rendered and built.
      contents:
        - Auto
        - blueprint
        - collect
        - get_object
        - preview

    - title: Docstring Renderers
      desc: |
        Renderers convert parsed docstrings into a target format, like markdown.
      options:
        dynamic: true
      contents:
        - name: MdRenderer
          children: linked
        - MdRenderer.render
        - MdRenderer.render_annotation
        - MdRenderer.render_header
        - MdRenderer.signature
        - MdRenderer.summarize

    - title: API Builders
      desc: |
        Builders are responsible for building documentation. They tie all the pieces
        of quartodoc together, and can be defined in your _quarto.yml config.
      contents:
        - kind: auto
          name: Builder
          members: []
        - Builder.from_quarto_config
        - Builder.build
        - Builder.write_index
        - Builder.write_doc_pages
        - Builder.write_sidebar
        - Builder.create_inventory

    - title: Inventory links
      desc: |
        Inventory files map a function's name to its corresponding url in your docs.
        These functions allow you to create and transform inventory files.
      contents:
        - create_inventory
        - convert_inventory

    - title: "Data models"

    - subtitle: "Structural"
      desc: |
        Classes for specifying the broad structure your docs.
      contents:
        - layout.Layout
        - layout.Section
        - layout.Page
        - layout.SectionElement
        - layout.ContentElement

    - subtitle: "Docable"
      desc: |
        Classes representing python objects to be rendered.
      contents:
        - name: layout.Doc
          members: []
        - layout.DocFunction
        - layout.DocAttribute
        - layout.DocModule
        - layout.DocClass
        - layout.Link
        - layout.Item
        - layout.ChoicesChildren

    - subtitle: "Docstring patches"
      desc: |
        Most of the classes for representing python objects live
        in [](`griffe.dataclasses`) or [](`griffe.docstrings.dataclasses`).
        However, the `quartodoc.ast` module has a number of custom classes to fill
        in support for some important docstring sections.
      contents:
         - ast.DocstringSectionSeeAlso
         - ast.DocstringSectionNotes
         - ast.DocstringSectionWarnings
         - ast.ExampleCode
         - ast.ExampleText
