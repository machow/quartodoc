name: CI

on:
  workflow_dispatch:
  push:
    branches: ["main", "dev-*"]
  pull_request:
  release:
    types: [published]

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Checks based on python versions ---
        python-version: ['3.9', '3.10']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ".[dev]"
      - name: Run tests
        run: |
          pytest

  pre-commit:
    name: "pre-commit checks"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install dev dependencies
        run: |
            python -m pip install --upgrade pip
            python -m pip install ".[dev]"
      - uses: pre-commit/action@v3.0.0

  release-pypi:
    name: "Release to pypi"
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: "Build Package"
        run: |
          python -m pip install build wheel
          python -m build --sdist --wheel
      - name: "Deploy to Test PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install ".[dev]"
          # TODO: temporary installs for examples
          # once quartodoc is stable we should move into their own libraries
          python -m pip install shiny shinylive
          python -m pip install --no-deps dascore==0.0.8
      - uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: "1.2.475"
      - name: Build docs
        run: |
          make docs-build
      # push to netlify -------------------------------------------------------

      # set release name ----

      - name: Configure pull release name
        if: ${{github.event_name == 'pull_request'}}
        run: |
          echo "RELEASE_NAME=pr-${PR_NUMBER}" >> $GITHUB_ENV
        env:
          PR_NUMBER: ${{ github.event.number }}
      - name: Configure branch release name
        if: ${{github.event_name != 'pull_request'}}
        run: |
          # use branch name, but replace slashes. E.g. feat/a -> feat-a
          echo "RELEASE_NAME=${GITHUB_REF_NAME/\//-}" >> $GITHUB_ENV
      # deploy ----

      - name: Create Github Deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.RELEASE_NAME }}
          ref: ${{ github.head_ref }}
          transient: true
          logs: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

      - name: Netlify docs preview
        run: |
          npm install -g netlify-cli
          # push main branch to production, others to preview --
          if [ "${ALIAS}" == "main" ]; then
            netlify deploy --dir=docs/_build --alias="main"
          else
            netlify deploy --dir=docs/_build --alias="${ALIAS}"
          fi
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          ALIAS: ${{ steps.deployment.outputs.env }}

      - name: Update Github Deployment
        uses: bobheadxi/deployments@v0.4.3
        if: ${{ always() }}
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: 'https://${{ steps.deployment.outputs.env }}--quartodoc.netlify.app'
          logs: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
      - uses: peaceiris/actions-gh-pages@v3
        if: github.event_name == 'release'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build
